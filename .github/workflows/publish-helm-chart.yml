name: Publish Helm Chart
on:
  push:
    paths:
      - 'charts/**'
      - 'Chart.yaml'
permissions:
  contents: write

jobs:
  release-chart:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm 
        uses: azure/setup-helm@v3
        with:
          version: v3.11.2

      - name: Configure Git (package metadata) 
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Check for chart version changes
        id: check_version
        run: |
          # Define o caminho para o Chart.yaml
          CHART_PATH="charts/k8sman-agent/Chart.yaml"

          # Obtém a versão atual do chart do Chart.yaml
          current_version=$(grep 'version:' $CHART_PATH | cut -d ' ' -f 2)
          echo "Current Chart Version: $current_version"
          echo "Current Version: $current_version" >> $GITHUB_ENV

          # Obtém a versão do chart do último commit (ignorando o commit atual)
          previous_version=$(git show HEAD^:$CHART_PATH | grep 'version:' | cut -d ' ' -f 2)
          echo "Previous Chart Version: $previous_version"

          # Define a saída para indicar se a versão foi alterada
          if [ "$current_version" != "$previous_version" ]; then
            echo "Version changed. Proceeding with release."
            echo "version_changed=true" >> $GITHUB_ENV
          else
            echo "No version change detected. Skipping release."
            echo "version_changed=false" >> $GITHUB_ENV
          fi

      - name: Run chart-releaser
        if: steps.check_version.outputs.version_changed == 'true'
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
